{"version":3,"sources":["components/Filter.js","components/Table.js","components/DirectoryContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Selections","filteredFirstName","filteredLastName","filteredPhone","filteredEmail","filterUsers","id","placeholder","onClick","type","Table","userData","sortUsers","border","console","log","map","user","name","first","last","dob","date","substring","phone","email","split","DirectoryContainer","state","users","filteredUsers","category","setState","sort","a","b","showFilter","$","css","event","preventDefault","val","filter","includes","fetchedUsers","ajax","url","dataType","success","data","push","results","then","this","Filter","firstName","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.805e45e6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Selections({ filteredFirstName, filteredLastName, filteredPhone, filteredEmail, filterUsers }) {\n\n    return (\n        <form id=\"filter-form\">\n            <h4>Filter By</h4>\n            <label>First Name: </label>\n            <input placeholder={filteredFirstName} id=\"first-name\"></input>\n            <label>Last Name: </label>\n            <input placeholder={filteredLastName} id=\"last-name\"></input>\n\n            <label>Phone: </label>\n            <input placeholder={filteredPhone} id=\"phone\"></input>\n            <label>Email: </label>\n            <input placeholder={filteredEmail} id=\"email\"></input>\n\n            <button onClick={filterUsers} id=\"apply-changes\" type=\"submit\">Apply</button>\n        </form>\n    )\n    \n}\n\nexport default Selections;","import React from \"react\";\n\nfunction Table({ userData, sortUsers }) {\n    \n    return (\n        <table id=\"user-table\" border=\"1\">\n            <thead>\n                <tr>\n                    <th onClick={() => { console.log(\"sorting by name\"); sortUsers(\"name\")}}>Name</th>\n                    <th onClick={() => { console.log(\"sorting by Date of Birth\"); sortUsers(\"dob\")}}>DOB</th>\n                    <th onClick={() => { console.log(\"sorting by Phone\"); sortUsers(\"phone\")}}>Phone</th>\n                    <th onClick={() => { console.log(\"sorting by Email\"); sortUsers(\"email\")}}>Email</th>\n                </tr>\n                \n            </thead>\n            <tbody>\n                {\n                    userData.map(user => {\n                        return(\n                            <tr> \n                                <td>{user.name.first + \" \" + user.name.last}</td>\n                                <td>{user.dob.date.substring(0,10)}</td>\n                                <td>{user.phone}</td>\n                                <td>{user.email.split(\"@\")[0]}</td>\n                            </tr>  \n                        )\n                    })\n                } \n            </tbody>\n            \n        </table>\n    )\n}\n\nexport default Table","import React, { Component } from \"react\";\nimport Filter from \"./Filter\"\nimport Table from \"./Table\"\nimport $ from \"jquery\"\n\n// TODO: have users filter as typing occurs rather than when form submits\n\nclass DirectoryContainer extends Component {\n\n    state = {\n        users: [],\n        filteredUsers: []\n    }\n\n    componentDidMount() {\n        const fetchedUsers = [];\n        // Fetch info and populate state.users\n        $.ajax({\n            url: 'https://randomuser.me/api/?results=20',\n            dataType: 'json',\n            success: function(data) {\n                fetchedUsers.push(...data.results)\n            }\n          }).then(() => {\n                this.setState({users: fetchedUsers})\n                this.setState({filteredUsers: fetchedUsers})\n          });\n        \n    }\n\n    sortUsers = (category) => {\n        switch(category) {\n            case \"name\":\n                this.setState({ users: this.state.users.sort((a, b) => {\n                    return a.name.first > b.name.first ? 1 : -1\n                })})\n                break;\n            case \"dob\":\n                this.setState({ users: this.state.users.sort((a, b) => {\n                    return a.dob.date > b.dob.date ? 1 : -1\n                })})\n                break;\n            case \"phone\":\n                this.setState({ users: this.state.users.sort((a, b) => {\n                    return a.phone > b.phone ? 1 : -1\n                })})\n                break;\n            default:\n                this.setState({ users: this.state.users.sort((a, b) => {\n                    return a.email > b.email ? 1 : -1\n                })})\n        }\n        \n    }\n\n    showFilter = () => {\n        $(\"#filter-form\").css(\"display\", \"block\")\n        $(\"#show-filter\").css(\"display\", \"none\")\n    }\n\n    filterUsers = (event) => {\n        event.preventDefault()\n\n        // filter by first name\n        if ($(\"#first-name\").val()) {\n            this.setState({ filteredUsers: this.state.users.filter(user => user.name.first.includes($(\"#first-name\").val()))})\n        } \n        // filter by last name\n        if ($(\"#last-name\").val()) {\n            this.setState({ filteredUsers: this.state.users.filter(user => user.name.last.includes($(\"#last-name\").val()))})\n        }\n        // filter by phone\n        if ($(\"#phone\").val()) {\n            this.setState({ filteredUsers: this.state.users.filter(user => user.phone.includes($(\"#phone\").val()))})\n        }\n        // filter by email\n        if ($(\"#email\").val()) {\n            this.setState({ filteredUsers: this.state.users.filter(user => user.email.includes($(\"#email\").val()))})\n        }\n\n        // Take away filter form\n        $(\"#filter-form\").css(\"display\", \"none\")\n        // Add show filter button\n        $(\"#show-filter\").css(\"display\", \"block\")\n    }\n\n    render() {\n        return (\n            <div>\n                <button id=\"show-filter\" onClick={this.showFilter}>Filter</button>\n                <Filter \n                    filteredFirstName={this.state.firstName} \n                    filteredLastName={this.state.firstName} \n                    filteredPhone={this.state.firstName} \n                    filteredEmail={this.state.firstName} \n                    filterUsers={this.filterUsers} \n                />\n                <h4 id=\"directions\">Click column to sort by</h4>\n                <Table sortUsers={this.sortUsers} userData={this.state.filteredUsers} />\n            </div>\n        )\n    }\n}\n\nexport default DirectoryContainer;","import './App.css';\nimport DirectoryContainer from \"./components/DirectoryContainer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <DirectoryContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}